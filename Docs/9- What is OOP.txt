1. Object Oriented Programming:
    - Object Oriented Programming is a programming paradigm centered around objects rather than functions.

2. 4 Pillars of OOP:
    * Encapsulation: Group related variables(properties) and functions(methods) into an object.
    * Abstraction: We can hide some or all the object members. We dont care what's happening inside.
    * Inheritance: Inherite properties and methods.
    * Polymorphism: (Many Forms) Refactor ugly switch/case statements.

3. Classical vs Prototypical Inheritance:
                (Shape is the Prototype of Circle)
                -----------------
        ------> :     Shape      :
        |       -----------------
        |         Commun methods
        |
        |
-----------------
:     Circle     :
-----------------

    * A Prototype is issentially a parent of another object.
    * Instance members are properties & methods defined inside an object directly.
    * Prototype members are properties & methods defined inside the prototype of an object.

4. Resetting the Constructor:
    * As a best practice, each time you reset the prototype object, reset also the constructor function.

    Circle.prototype = Object.create(Shape.prototype); => Reset the prototype object
    Circle.prototype.constructor = Circle; => Reset the constructor function

5. Calling the Super Constructor:

6. Intermediate Function Inheritance:
    * Intermediate function inheritance is a function that takes a Child and a Parent constructors in order to extend the Parent properties to the Child.

7. Polymorphism:
    * Polymorphism enables to call different implementations based on the type of the object.

8. Mixins - Composition:
    